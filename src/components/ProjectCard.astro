---
export interface Props {
    imgSrc: string;
    techList: Array<string>;
    projectTitle: string;
    siteLink: string;
    description: string;
}

const { imgSrc, techList, projectTitle, siteLink, description } = Astro.props;
---

<a
    href={siteLink}
    target="_blank"
    class="flex flex-col-reverse gap-8 p-8 rounded-lg transition-all duration-150 ease-in-out cursor-pointer md:flex-row group dark:hover:bg-slate-700/50"
>
    <img
        src={imgSrc}
        class="object-cover object-top w-80 rounded-lg border-2 transition-all duration-150 ease-in-out border-slate-700 aspect-video group-hover:border-slate-600"
    />
    <div class="flex flex-col gap-4">
        <div class="flex gap-2 items-center">
            <h3
                class="text-2xl transition-all duration-150 ease-in-out group-hover:text-amber-500"
            >
                {projectTitle}
            </h3>
            <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="2"
                stroke="currentColor"
                class="w-4 h-4 transition-all duration-150 ease-in-out group-hover:translate-x-1 group-hover:-translate-y-1 group-hover:stroke-amber-500"
            >
                <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="m4.5 19.5 15-15m0 0H8.25m11.25 0v11.25"></path>
            </svg>
        </div>
        <p class="text-slate-400">{description}</p>
        <ul class="flex flex-wrap gap-4">
            {
                techList.map((tech: string) => {
                    return (
                        <li class="py-1 px-3 text-sm rounded-3xl transition-all duration-150 ease-in-out dark:group-hover:bg-amber-800/60 dark:bg-amber-800/30 dark:text-amber-100/80 dark:group-hover:text-amber-100">
                            {tech}
                        </li>
                    );
                })
            }
        </ul>
    </div>
</a>
